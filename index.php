        'joined_success' => "тЬЕ <b>╨б╨┐╨░╤Б╨╕╨▒╨╛ ╨╖╨░ ╨┐╤А╨╕╤Б╨╛╨╡╨┤╨╕╨╜╨╡╨╜╨╕╨╡!</b>\n\n╨в╨╡╨┐╨╡╤А╤М ╨▓╤Л ╨╝╨╛╨╢╨╡╤В╨╡ ╨╜╨░╤З╨░╤В╤М ╨╖╨░╤А╨░╨▒╨░╤В╤Л╨▓╨░╤В╤М TON!",
        'earn_title' => "ЁЯТ░ <b>╨Ч╨░╤А╨░╨▒╨╛╤В╨░╤В╤М TON</b>\n\n",
        'earn_instructions' => "ЁЯУ▒ <b>╨б╨╝╨╛╤В╤А╨╕╤В╨╡ ╤А╨╡╨║╨╗╨░╨╝╤Г ╨╕ ╨╖╨░╤А╨░╨▒╨░╤В╤Л╨▓╨░╨╣╤В╨╡ " . AD_REWARD . " TON ╨╖╨░ ╨║╨░╨╢╨┤╤Г╤О</b>\n\nЁЯОм ╨Ъ╨░╨║ ╨╖╨░╤А╨░╨▒╨╛╤В╨░╤В╤М:\n1. ╨Э╨░╨╢╨╝╨╕╤В╨╡ ╨║╨╜╨╛╨┐╨║╤Г '╨б╨╝╨╛╤В╤А╨╡╤В╤М ╤А╨╡╨║╨╗╨░╨╝╤Г'\n2. ╨Я╤А╨╛╤Б╨╝╨╛╤В╤А╨╕╤В╨╡ ╤А╨╡╨║╨╗╨░╨╝╤Г ╨┐╨╛╨╗╨╜╨╛╤Б╤В╤М╤О\n3. ╨Я╨╛╨╗╤Г╤З╨╕╤В╨╡ " . AD_REWARD . " TON ╨░╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕!\n\nтП░ ╨Я╨╡╤А╨╡╤А╤Л╨▓: " . AD_COOLDOWN . " ╤Б╨╡╨║╤Г╨╜╨┤ ╨╝╨╡╨╢╨┤╤Г ╤А╨╡╨║╨╗╨░╨╝╨╛╨╣\n\n",
        'daily_progress' => "ЁЯУК <b>╨Ф╨╜╨╡╨▓╨╜╨╛╨╣ ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б:</b>\nтАв ╨Я╤А╨╛╤Б╨╝╨╛╤В╤А╨╡╨╜╨╛ ╤Б╨╡╨│╨╛╨┤╨╜╤П: <b>%d/%d</b> ╤А╨╡╨║╨╗╨░╨╝\nтАв ╨Ю╤Б╤В╨░╨╗╨╛╤Б╤М: <b>%d</b> ╤А╨╡╨║╨╗╨░╨╝\n\n",
        'balance_stats' => "ЁЯТ░ <b>╨б╤В╨░╤В╨╕╤Б╤В╨╕╨║╨░ ╨▒╨░╨╗╨░╨╜╤Б╨░:</b>\nтАв ╨в╨╡╨║╤Г╤Й╨╕╨╣: <b>%s TON</b>\nтАв ╨Э╨░╨╕╨▓╤Л╤Б╤И╨╕╨╣: <b>%s TON</b>\nтАв ╨Т╤Б╨╡╨│╨╛ ╨╖╨░╤А╨░╨▒╨╛╤В╨░╨╜╨╛: <b>%s TON</b>\n\n",
        'balance_title' => "ЁЯТ│ <b>╨Т╨░╤И ╨▒╨░╨╗╨░╨╜╤Б</b>\n\n",
        'balance_details' => "ЁЯТ░ ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛: <b>%s TON</b>\nЁЯПЖ ╨Э╨░╨╕╨▓╤Л╤Б╤И╨╕╨╣ ╨▒╨░╨╗╨░╨╜╤Б: <b>%s TON</b>\nЁЯУИ ╨Т╤Б╨╡╨│╨╛ ╨╖╨░╤А╨░╨▒╨╛╤В╨░╨╜╨╛: <b>%s TON</b>\nЁЯСе ╨а╨╡╤Д╨╡╤А╨░╨╗╤Л: <b>%d</b>\n\n",
        'ref_title' => "ЁЯСе <b>╨Т╨░╤И╨╕ ╤А╨╡╤Д╨╡╤А╨░╨╗╤Л</b>\n\n",
        'ref_stats' => "ЁЯУК <b>╨б╤В╨░╤В╨╕╤Б╤В╨╕╨║╨░:</b>\nтАв ╨Т╤Б╨╡╨│╨╛ ╤А╨╡╤Д╨╡╤А╨░╨╗╨╛╨▓: <b>%d</b>\nтАв ╨Ч╨░╤А╨░╨▒╨╛╤В╨░╨╜╨╛ ╤Б ╤А╨╡╤Д╨╡╤А╨░╨╗╨╛╨▓: <b>%s TON</b>\nтАв ╨Т╨░╤И ╤А╨╡╤Д╨╡╤А╨░╨╗╤М╨╜╤Л╨╣ ╨║╨╛╨┤: <code>%s</code>\n\n",
        'ref_instructions' => "ЁЯТб <b>╨Ъ╨░╨║ ╨┐╤А╨╕╨│╨╗╨░╤И╨░╤В╤М:</b>\n╨Я╨╛╨┤╨╡╨╗╨╕╤В╨╡╤Б╤М ╤Б╨▓╨╛╨╡╨╣ ╤А╨╡╤Д╨╡╤А╨░╨╗╤М╨╜╨╛╨╣ ╤Б╤Б╤Л╨╗╨║╨╛╨╣ ╨╕ ╨╖╨░╤А╨░╨▒╨░╤В╤Л╨▓╨░╨╣╤В╨╡ " . REF_REWARD . " TON ╨╖╨░ ╨║╨░╨╢╨┤╨╛╨│╨╛ ╨┤╤А╤Г╨│╨░, ╨║╨╛╤В╨╛╤А╤Л╨╣ ╨┐╤А╨╕╤Б╨╛╨╡╨┤╨╕╨╜╨╕╤В╤Б╤П!\n\n",
        'withdraw_title' => "ЁЯПз <b>╨Т╤Л╨▓╨╛╨┤ TON</b>\n\n",
        'withdraw_requirements' => "ЁЯУЛ <b>╨в╤А╨╡╨▒╨╛╨▓╨░╨╜╨╕╤П:</b>\nтАв ╨Ь╨╕╨╜╨╕╨╝╤Г╨╝ " . MIN_WITHDRAW_REF . " ╤А╨╡╤Д╨╡╤А╨░╨╗╨╛╨▓\nтАв ╨Ь╨╕╨╜╨╕╨╝╤Г╨╝ " . MIN_WITHDRAW_AMOUNT . " TON ╨╜╨░ ╨▒╨░╨╗╨░╨╜╤Б╨╡\n\n",
        'withdraw_stats' => "ЁЯУК <b>╨Т╨░╤И╨░ ╤Б╤В╨░╤В╨╕╤Б╤В╨╕╨║╨░:</b>\nтАв ╨а╨╡╤Д╨╡╤А╨░╨╗╤Л: <b>%d/%d</b>\nтАв ╨С╨░╨╗╨░╨╜╤Б: <b>%s/%s TON</b>\n\n",
        'withdraw_address' => "ЁЯТ│ <b>╨Т╨░╤И TON ╨░╨┤╤А╨╡╤Б:</b>\n%s\n\n",
        'no_address' => "тЭМ <b>TON ╨░╨┤╤А╨╡╤Б ╨╜╨╡ ╤Г╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜</b>\n\n╨Я╨╛╨╢╨░╨╗╤Г╨╣╤Б╤В╨░, ╤Б╨╜╨░╤З╨░╨╗╨░ ╤Г╤Б╤В╨░╨╜╨╛╨▓╨╕╤В╨╡ ╨░╨┤╤А╨╡╤Б ╨▓╨░╤И╨╡╨│╨╛ TON ╨║╨╛╤И╨╡╨╗╤М╨║╨░.",
        'enter_address' => "ЁЯТ│ <b>╨Т╨▓╨╡╨┤╨╕╤В╨╡ TON ╨░╨┤╤А╨╡╤Б</b>\n\n╨Я╨╛╨╢╨░╨╗╤Г╨╣╤Б╤В╨░, ╨╛╤В╨┐╤А╨░╨▓╤М╤В╨╡ ╨░╨┤╤А╨╡╤Б ╨▓╨░╤И╨╡╨│╨╛ TON ╨║╨╛╤И╨╡╨╗╤М╨║╨░ ╤Б╨╡╨╣╤З╨░╤Б:",
        'invalid_address' => "тЭМ <b>╨Э╨╡╨▓╨╡╤А╨╜╤Л╨╣ TON ╨░╨┤╤А╨╡╤Б</b>\n\n╨Я╨╛╨╢╨░╨╗╤Г╨╣╤Б╤В╨░, ╨┐╤А╨╛╨▓╨╡╤А╤М╤В╨╡ ╨▓╨░╤И ╨░╨┤╤А╨╡╤Б ╨╕ ╨┐╨╛╨┐╤А╨╛╨▒╤Г╨╣╤В╨╡ ╤Б╨╜╨╛╨▓╨░. ╨г╨▒╨╡╨┤╨╕╤В╨╡╤Б╤М, ╤З╤В╨╛ ╤Н╤В╨╛ ╨┤╨╡╨╣╤Б╤В╨▓╨╕╤В╨╡╨╗╤М╨╜╤Л╨╣ TON ╨░╨┤╤А╨╡╤Б ╨║╨╛╤И╨╡╨╗╤М╨║╨░.",
        'address_saved' => "тЬЕ <b>TON ╨░╨┤╤А╨╡╤Б ╤Б╨╛╤Е╤А╨░╨╜╨╡╨╜!</b>\n\n╨Т╨░╤И ╨░╨┤╤А╨╡╤Б ╨┤╨╗╤П ╨▓╤Л╨▓╨╛╨┤╨░ ╨╛╨▒╨╜╨╛╨▓╨╗╨╡╨╜.",
        'withdraw_success' => "тЬЕ <b>╨Ч╨░╨┐╤А╨╛╤Б ╨╜╨░ ╨▓╤Л╨▓╨╛╨┤ ╨╛╤В╨┐╤А╨░╨▓╨╗╨╡╨╜!</b>\n\n╨Т╨░╤И ╨╖╨░╨┐╤А╨╛╤Б ╨╜╨░ ╨▓╤Л╨▓╨╛╨┤ %s TON ╨┐╨╛╨╗╤Г╤З╨╡╨╜ ╨╕ ╨▒╤Г╨┤╨╡╤В ╨╛╨▒╤А╨░╨▒╨╛╤В╨░╨╜ ╨▓ ╤В╨╡╤З╨╡╨╜╨╕╨╡ 24 ╤З╨░╤Б╨╛╨▓.",
        'insufficient_refs' => "тЭМ <b>╨Э╨╡╨┤╨╛╤Б╤В╨░╤В╨╛╤З╨╜╨╛ ╤А╨╡╤Д╨╡╤А╨░╨╗╨╛╨▓</b>\n\n╨Т╨░╨╝ ╨╜╤Г╨╢╨╜╨╛ ╨║╨░╨║ ╨╝╨╕╨╜╨╕╨╝╤Г╨╝ %d ╤А╨╡╤Д╨╡╤А╨░╨╗╨╛╨▓ ╨┤╨╗╤П ╨▓╤Л╨▓╨╛╨┤╨░. ╨г ╨▓╨░╤Б %d.",
        'insufficient_balance' => "тЭМ <b>╨Э╨╡╨┤╨╛╤Б╤В╨░╤В╨╛╤З╨╜╨╛ ╤Б╤А╨╡╨┤╤Б╤В╨▓</b>\n\n╨Ь╨╕╨╜╨╕╨╝╨░╨╗╤М╨╜╨░╤П ╤Б╤Г╨╝╨╝╨░ ╨▓╤Л╨▓╨╛╨┤╨░ %s TON. ╨г ╨▓╨░╤Б %s TON.",
        'new_ref' => "ЁЯОЙ <b>╨Э╨╛╨▓╤Л╨╣ ╤А╨╡╤Д╨╡╤А╨░╨╗!</b>\n\nЁЯСд ╨Э╨╛╨▓╤Л╨╣ ╨┐╨╛╨╗╤М╨╖╨╛╨▓╨░╤В╨╡╨╗╤М @%s ╨┐╤А╨╕╤Б╨╛╨╡╨┤╨╕╨╜╨╕╨╗╤Б╤П ╨┐╨╛ ╨▓╨░╤И╨╡╨╣ ╤А╨╡╤Д╨╡╤А╨░╨╗╤М╨╜╨╛╨╣ ╤Б╤Б╤Л╨╗╨║╨╡!\nЁЯТ░ ╨Т╤Л ╨╖╨░╤А╨░╨▒╨╛╤В╨░╨╗╨╕: <b>" . REF_REWARD . " TON</b>\nЁЯСе ╨Т╤Б╨╡╨│╨╛ ╤А╨╡╤Д╨╡╤А╨░╨╗╨╛╨▓: <b>%d</b>\nЁЯТ│ ╨Э╨╛╨▓╤Л╨╣ ╨▒╨░╨╗╨░╨╜╤Б: <b>%s TON</b>"
    ),
    'hi' => array(
        'welcome' => "ЁЯЪА <b>TAKONI ADS рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ!</b>\n\n",
        'welcome_ref' => "ЁЯОЙ <b>рд░реЗрдлрд░рд▓ рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рд╕реНрд╡рд╛рдЧрдд рд╣реИ!</b>\n\nрдЖрдк @%s рдХреЗ рд░реЗрдлрд░рд▓ рд▓рд┐рдВрдХ рд╕реЗ рдЬреБрдбрд╝реЗ!\n\n",
        'earn_info' => "ЁЯТ░ <b>TON рдХрдорд╛рдПрдВ</b> - рд╡рд┐рдЬреНрдЮрд╛рдкрди рджреЗрдЦрдХрд░\nЁЯСе <b>рджреЛрд╕реНрддреЛрдВ рдХреЛ рдЖрдордВрддреНрд░рд┐рдд рдХрд░реЗрдВ</b> - рдмреЛрдирд╕ TON рдкрд╛рдПрдВ\nЁЯПз <b>рдирд┐рдХрд╛рд╕реА рдХрд░реЗрдВ</b> - TON рд╡реЙрд▓реЗрдЯ рдореЗрдВ\n\n",
        'your_ref_code' => "ЁЯФЧ <b>рдЖрдкрдХрд╛ рд░реЗрдлрд░рд▓ рдХреЛрдб:</b>\n<code>%s</code>\n\n",
        'rewards' => "ЁЯУК <b>рдкреБрд░рд╕реНрдХрд╛рд░:</b>\nтАв рд╡рд┐рдЬреНрдЮрд╛рдкрди рджреЗрдЦреЗрдВ: <b>" . AD_REWARD . " TON</b>\nтАв рдкреНрд░рддрд┐ рд░реЗрдлрд░рд▓: <b>" . REF_REWARD . " TON</b>\n\n",
        'daily_limit' => "тЪая╕П <b>рджреИрдирд┐рдХ рд╕реАрдорд╛:</b>\nтАв рдкреНрд░рддрд┐рджрд┐рди рдЕрдзрд┐рдХрддрдо <b>" . DAILY_AD_LIMIT . " рд╡рд┐рдЬреНрдЮрд╛рдкрди</b>\n\n",
        'withdraw_req' => "тЪая╕П <b>рдирд┐рдХрд╛рд╕реА рдЖрд╡рд╢реНрдпрдХрддрд╛:</b>\nтАв рдиреНрдпреВрдирддрдо <b>" . MIN_WITHDRAW_REF . " рд░реЗрдлрд░рд▓</b> рдЖрд╡рд╢реНрдпрдХ",
        'channel_required' => "ЁЯУв <b>рдЪреИрдирд▓ рд╕рджрд╕реНрдпрддрд╛ рдЖрд╡рд╢реНрдпрдХ</b>\n\nрдЗрд╕ рдмреЙрдЯ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП, рдЖрдкрдХреЛ рд╣рдорд╛рд░реЗ рдЖрдзрд┐рдХрд╛рд░рд┐рдХ рдЪреИрдирд▓ рд╕реЗ рдЬреБрдбрд╝рдирд╛ рд╣реЛрдЧрд╛:\n" . CHANNEL_USERNAME . "\n\nрдЬреБрдбрд╝рдиреЗ рдХреЗ рдмрд╛рдж, рдиреАрдЪреЗ 'тЬЕ рдореИрдВ рд╢рд╛рдорд┐рд▓ рд╣реЛ рдЧрдпрд╛' рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВред",
        'not_joined' => "тЭМ <b>рдЖрдк рдЕрднреА рддрдХ рдЪреИрдирд▓ рд╕реЗ рдирд╣реАрдВ рдЬреБрдбрд╝реЗ рд╣реИрдВ!</b>\n\nрдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ " . CHANNEL_USERNAME . " рд╕реЗ рдЬреБрдбрд╝реЗрдВ, рдлрд┐рд░ 'тЬЕ рдореИрдВ рд╢рд╛рдорд┐рд▓ рд╣реЛ рдЧрдпрд╛' рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ",
        'joined_success' => "тЬЕ <b>рдЬреБрдбрд╝рдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рдж!</b>\n\nрдЕрдм рдЖрдк TON рдХрдорд╛рдирд╛ рд╢реБрд░реВ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ!",
        'earn_title' => "ЁЯТ░ <b>TON рдХрдорд╛рдПрдВ</b>\n\n",
        'earn_instructions' => "ЁЯУ▒ <b>рд╡рд┐рдЬреНрдЮрд╛рдкрди рджреЗрдЦреЗрдВ рдФрд░ рдкреНрд░рддреНрдпреЗрдХ рд╕реЗ " . AD_REWARD . " TON рдХрдорд╛рдПрдВ</b>\n\nЁЯОм рдХреИрд╕реЗ рдХрдорд╛рдПрдВ:\n1. 'рд╡рд┐рдЬреНрдЮрд╛рдкрди рджреЗрдЦреЗрдВ' рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ\n2. рд╡рд┐рдЬреНрдЮрд╛рдкрди рдХреЛ рдкреВрд░реА рддрд░рд╣ рджреЗрдЦреЗрдВ\n3. рд╕реНрд╡рдЪрд╛рд▓рд┐рдд рд░реВрдк рд╕реЗ " . AD_REWARD . " TON рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ!\n\nтП░ рдХреЛрд▓реНрдбрд╛рдЙрди: рд╡рд┐рдЬреНрдЮрд╛рдкрдиреЛрдВ рдХреЗ рдмреАрдЪ " . AD_COOLDOWN . " рд╕реЗрдХрдВрдб\n\n",
        'daily_progress' => "ЁЯУК <b>рджреИрдирд┐рдХ рдкреНрд░рдЧрддрд┐:</b>\nтАв рдЖрдЬ рджреЗрдЦреЗ рдЧрдП: <b>%d/%d</b> рд╡рд┐рдЬреНрдЮрд╛рдкрди\nтАв рд╢реЗрд╖: <b>%d</b> рд╡рд┐рдЬреНрдЮрд╛рдкрди\n\n",
        'balance_stats' => "ЁЯТ░ <b>рдмреИрд▓реЗрдВрд╕ рд╕реНрдЯреИрдЯрд┐рд╕реНрдЯрд┐рдХреНрд╕:</b>\nтАв рд╡рд░реНрддрдорд╛рди: <b>%s TON</b>\nтАв рдЙрдЪреНрдЪрддрдо: <b>%s TON</b>\nтАв рдХреБрд▓ рдХрдорд╛рдпрд╛: <b>%s TON</b>\n\n",
        'balance_title' => "ЁЯТ│ <b>рдЖрдкрдХрд╛ рдмреИрд▓реЗрдВрд╕</b>\n\n",
        'balance_details' => "ЁЯТ░ рдЙрдкрд▓рдмреНрдз: <b>%s TON</b>\nЁЯПЖ рдЙрдЪреНрдЪрддрдо рдмреИрд▓реЗрдВрд╕: <b>%s TON</b>\nЁЯУИ рдХреБрд▓ рдХрдорд╛рдпрд╛: <b>%s TON</b>\nЁЯСе рд░реЗрдлрд░рд▓: <b>%d</b>\n\n",
        'ref_title' => "ЁЯСе <b>рдЖрдкрдХреЗ рд░реЗрдлрд░рд▓</b>\n\n",
        'ref_stats' => "ЁЯУК <b>рдЖрдБрдХрдбрд╝реЗ:</b>\nтАв рдХреБрд▓ рд░реЗрдлрд░рд▓: <b>%d</b>\nтАв рд░реЗрдлрд░рд▓ рд╕реЗ рдХрдорд╛рдпрд╛: <b>%s TON</b>\nтАв рдЖрдкрдХрд╛ рд░реЗрдлрд░рд▓ рдХреЛрдб: <code>%s</code>\n\n",
        'ref_instructions' => "ЁЯТб <b>рдХреИрд╕реЗ рдЖрдордВрддреНрд░рд┐рдд рдХрд░реЗрдВ:</b>\nрдЕрдкрдирд╛ рд░реЗрдлрд░рд▓ рд▓рд┐рдВрдХ рд╕рд╛рдЭрд╛ рдХрд░реЗрдВ рдФрд░ рдЬреБрдбрд╝рдиреЗ рд╡рд╛рд▓реЗ рдкреНрд░рддреНрдпреЗрдХ рдорд┐рддреНрд░ рдХреЗ рд▓рд┐рдП " . REF_REWARD . " TON рдХрдорд╛рдПрдВ!\n\n",
        'withdraw_title' => "ЁЯПз <b>TON рдирд┐рдХрд╛рд╕реА</b>\n\n",
        'withdraw_requirements' => "ЁЯУЛ <b>рдЖрд╡рд╢реНрдпрдХрддрд╛рдПрдБ:</b>\nтАв рдиреНрдпреВрдирддрдо " . MIN_WITHDRAW_REF . " рд░реЗрдлрд░рд▓\nтАв рдиреНрдпреВрдирддрдо " . MIN_WITHDRAW_AMOUNT . " TON рдмреИрд▓реЗрдВрд╕\n\n",
        'withdraw_stats' => "ЁЯУК <b>рдЖрдкрдХреЗ рдЖрдБрдХрдбрд╝реЗ:</b>\nтАв рд░реЗрдлрд░рд▓: <b>%d/%d</b>\nтАв рдмреИрд▓реЗрдВрд╕: <b>%s/%s TON</b>\n\n",
        'withdraw_address' => "ЁЯТ│ <b>рдЖрдкрдХрд╛ TON рдкрддрд╛:</b>\n%s\n\n",
        'no_address' => "тЭМ <b>TON рдкрддрд╛ рд╕реЗрдЯ рдирд╣реАрдВ рд╣реИ</b>\n\nрдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ рдЕрдкрдирд╛ TON рд╡реЙрд▓реЗрдЯ рдкрддрд╛ рд╕реЗрдЯ рдХрд░реЗрдВред",
        'enter_address' => "ЁЯТ│ <b>TON рдкрддрд╛ рджрд░реНрдЬ рдХрд░реЗрдВ</b>\n\nрдХреГрдкрдпрд╛ рдЕрдм рдЕрдкрдирд╛ TON рд╡реЙрд▓реЗрдЯ рдкрддрд╛ рднреЗрдЬреЗрдВ:",
        'invalid_address' => "тЭМ <b>рдЕрдорд╛рдиреНрдп TON рдкрддрд╛</b>\n\nрдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рдкрддрд╛ рдЬрд╛рдВрдЪреЗрдВ рдФрд░ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВ рдХрд┐ рдпрд╣ рдПрдХ рдорд╛рдиреНрдп TON рд╡реЙрд▓реЗрдЯ рдкрддрд╛ рд╣реИред",
        'address_saved' => "тЬЕ <b>TON рдкрддрд╛ рд╕рд╣реЗрдЬрд╛ рдЧрдпрд╛!</b>\n\nрдЖрдкрдХрд╛ рдирд┐рдХрд╛рд╕реА рдкрддрд╛ рдЕрдкрдбреЗрдЯ рдХрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред",
        'withdraw_success' => "тЬЕ <b>рдирд┐рдХрд╛рд╕реА рдЕрдиреБрд░реЛрдз рд╕рдмрдорд┐рдЯ рдХрд┐рдпрд╛ рдЧрдпрд╛!</b>\n\n%s TON рдХреЗ рдЖрдкрдХреЗ рдЕрдиреБрд░реЛрдз рдХреЛ рдкреНрд░рд╛рдкреНрдд рдХрд░ рд▓рд┐рдпрд╛ рдЧрдпрд╛ рд╣реИ рдФрд░ 24 рдШрдВрдЯреЛрдВ рдХреЗ рднреАрддрд░ рд╕рдВрд╕рд╛рдзрд┐рдд рдХрд┐рдпрд╛ рдЬрд╛рдПрдЧрд╛ред",
        'insufficient_refs' => "тЭМ <b>рдЕрдкрд░реНрдпрд╛рдкреНрдд рд░реЗрдлрд░рд▓</b>\n\nрдирд┐рдХрд╛рд╕реА рдХреЗ рд▓рд┐рдП рдЖрдкрдХреЛ рдХрдо рд╕реЗ рдХрдо %d рд░реЗрдлрд░рд▓ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реИред рдЖрдкрдХреЗ рдкрд╛рд╕ %d рд╣реИрдВред",
        'insufficient_balance' => "тЭМ <b>рдЕрдкрд░реНрдпрд╛рдкреНрдд рдмреИрд▓реЗрдВрд╕</b>\n\nрдиреНрдпреВрдирддрдо рдирд┐рдХрд╛рд╕реА рд░рд╛рд╢рд┐ %s TON рд╣реИред рдЖрдкрдХреЗ рдкрд╛рд╕ %s TON рд╣реИред",
        'new_ref' => "ЁЯОЙ <b>рдирдпрд╛ рд░реЗрдлрд░рд▓!</b>\n\nЁЯСд рдирдпрд╛ рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ @%s рдЖрдкрдХреЗ рд░реЗрдлрд░рд▓ рд▓рд┐рдВрдХ рд╕реЗ рдЬреБрдбрд╝рд╛!\nЁЯТ░ рдЖрдкрдиреЗ рдХрдорд╛рдпрд╛: <b>" . REF_REWARD . " TON</b>\nЁЯСе рдХреБрд▓ рд░реЗрдлрд░рд▓: <b>%d</b>\nЁЯТ│ рдирдпрд╛ рдмреИрд▓реЗрдВрд╕: <b>%s TON</b>"
    )
);

// Initialize files
if (!file_exists(USERS_FILE)) {
    file_put_contents(USERS_FILE, '{}');
}
if (!file_exists(ERROR_LOG)) {
    file_put_contents(ERROR_LOG, '');
}

function logError($message) {
    @file_put_contents(ERROR_LOG, date('[Y-m-d H:i:s] ') . $message . "\n", FILE_APPEND);
}

function loadUsers() {
    if (!file_exists(USERS_FILE)) {
        return array();
    }
    $data = @file_get_contents(USERS_FILE);
    if ($data === false) {
        return array();
    }
    $users = json_decode($data, true);
    return is_array($users) ? $users : array();
}

function saveUsers($users) {
    $result = @file_put_contents(USERS_FILE, json_encode($users, JSON_PRETTY_PRINT));
    return $result !== false;
}

function resetDailyLimits() {
    $users = loadUsers();
    $today = date('Y-m-d');
    $reset_count = 0;
    
    foreach ($users as $chat_id => $user) {
        $last_reset = isset($user['last_daily_reset']) ? $user['last_daily_reset'] : '';
        if ($last_reset !== $today) {
            $users[$chat_id]['ads_watched_today'] = 0;
            $users[$chat_id]['last_daily_reset'] = $today;
            $reset_count++;
        }
    }
    
    if ($reset_count > 0) {
        saveUsers($users);
        logError("Daily limits reset for " . $reset_count . " users");
    }
}

function sendMessage($chat_id, $text, $keyboard = null) {
    $params = array(
        'chat_id' => $chat_id,
        'text' => $text,
        'parse_mode' => 'HTML'
    );
    
    if ($keyboard) {
        $params['reply_markup'] = json_encode($keyboard);
    }
    
    $url = API_URL . 'sendMessage?' . http_build_query($params);
    $result = @file_get_contents($url);
    return $result !== false;
}

function editMessageText($chat_id, $message_id, $text, $keyboard = null) {
    $params = array(
        'chat_id' => $chat_id,
        'message_id' => $message_id,
        'text' => $text,
        'parse_mode' => 'HTML'
    );
    
    if ($keyboard) {
        $params['reply_markup'] = json_encode($keyboard);
    }
    
    $url = API_URL . 'editMessageText?' . http_build_query($params);
    $result = @file_get_contents($url);
    return $result !== false;
}

function generateRefCode($chat_id) {
    return 'TAK' . substr(md5($chat_id), 0, 7);
}

// KANAL KONTROL FONKS─░YONU
function isUserInChannel($chat_id) {
    $method = 'getChatMember';
    $params = array(
        'chat_id' => CHANNEL_USERNAME,
        'user_id' => $chat_id
    );
    
    $url = API_URL . $method . '?' . http_build_query($params);
    $response = @file_get_contents($url);
    
    if ($response === false) {
        logError("Failed to check channel membership for user: " . $chat_id);
        return false;
    }
    
    $data = json_decode($response, true);
    
    if (isset($data['ok']) && $data['ok'] === true) {
        $status = $data['result']['status'];
        // Kullan─▒c─▒ kanalda m─▒ kontrol et
        return in_array($status, ['member', 'administrator', 'creator']);
    }
    
    return false;
}

function isValidTONAddress($address) {
    $address = trim($address);
    
    logError("Checking TON address: " . $address);
    
    // T├╝m TON adres formatlar─▒
    $patterns = array(
        '/^EQ[0-9a-zA-Z_-]{48}$/', // EQ ile ba┼Яlayan 48 karakter
        '/^UQ[0-9a-zA-Z_-]{48}$/', // UQ ile ba┼Яlayan 48 karakter
        '/^Ef[0-9a-zA-Z_-]{48}$/', // Ef ile ba┼Яlayan 48 karakter
        '/^Uf[0-9a-zA-Z_-]{48}$/', // Uf ile ba┼Яlayan 48 karakter
        '/^0:[0-9a-fA-F]{64}$/',   // Raw format
    );
    
    foreach ($patterns as $pattern) {
        if (preg_match($pattern, $address)) {
            return true;
        }
    }
    
    // User-friendly format kontrol├╝ (EQabc...xyz)
    if (preg_match('/^EQ[a-zA-Z0-9_-]{44,50}$/', $address)) {
        return true;
    }
    
    return false;
}

function getLanguageKeyboard() {
    return array(
        'inline_keyboard' => array(
            array(
                array('text' => 'ЁЯЗ║ЁЯЗ╕ English', 'callback_data' => 'lang_en'),
                array('text' => 'ЁЯЗ╣ЁЯЗ╖ T├╝rk├зe', 'callback_data' => 'lang_tr')
            ),
            array(
                array('text' => 'ЁЯЗ╖ЁЯЗ║ ╨а╤Г╤Б╤Б╨║╨╕╨╣', 'callback_data' => 'lang_ru'),
                array('text' => 'ЁЯЗоЁЯЗ│ рд╣рд┐рдиреНрджреА', 'callback_data' => 'lang_hi')
            )
        )
    );
}

function getChannelJoinKeyboard($lang_code = 'en') {
    return array(
        'inline_keyboard' => array(
            array(
                array('text' => 'ЁЯУв Join Channel', 'url' => CHANNEL_URL)
            ),
            array(
                array('text' => 'тЬЕ I Joined', 'callback_data' => 'check_join')
            )
        )
    );
}

function getMainKeyboard($lang_code = 'en') {
    return array(
        'inline_keyboard' => array(
            array(
                array('text' => 'ЁЯТ░ ' . ($lang_code == 'tr' ? 'TON Kazan' : ($lang_code == 'ru' ? '╨Ч╨░╤А╨░╨▒╨╛╤В╨░╤В╤М TON' : ($lang_code == 'hi' ? 'TON рдХрдорд╛рдПрдВ' : 'Earn TON'))), 'callback_data' => 'earn'),
                array('text' => 'ЁЯТ│ ' . ($lang_code == 'tr' ? 'Bakiye' : ($lang_code == 'ru' ? '╨С╨░╨╗╨░╨╜╤Б' : ($lang_code == 'hi' ? 'рдмреИрд▓реЗрдВрд╕' : 'Balance'))), 'callback_data' => 'balance')
            ),
            array(
                array('text' => 'ЁЯСе ' . ($lang_code == 'tr' ? 'Referanslar' : ($lang_code == 'ru' ? '╨а╨╡╤Д╨╡╤А╨░╨╗╤Л' : ($lang_code == 'hi' ? 'рд░реЗрдлрд░рд▓' : 'Referrals'))), 'callback_data' => 'referrals'),
                array('text' => 'ЁЯПз ' . ($lang_code == 'tr' ? '├Зekim' : ($lang_code == 'ru' ? '╨Т╤Л╨▓╨╛╨┤' : ($lang_code == 'hi' ? 'рдирд┐рдХрд╛рд╕реА' : 'Withdraw'))), 'callback_data' => 'withdraw')
            ),
            array(
                array('text' => 'ЁЯМР ' . ($lang_code == 'tr' ? 'Dil' : ($lang_code == 'ru' ? '╨п╨╖╤Л╨║' : ($lang_code == 'hi' ? 'рднрд╛рд╖рд╛' : 'Language'))), 'callback_data' => 'change_lang')
            )
        )
    );
}

function getEarnKeyboard($lang_code = 'en') {
    $webapp_url = "https://takoniads.onrender.com/webapp.html";
    
    return array(
        'inline_keyboard' => array(
            array(
                array('text' => 'ЁЯУ▒ ' . ($lang_code == 'tr' ? 'Reklam ─░zle' : ($lang_code == 'ru' ? '╨б╨╝╨╛╤В╤А╨╡╤В╤М ╤А╨╡╨║╨╗╨░╨╝╤Г' : ($lang_code == 'hi' ? 'рд╡рд┐рдЬреНрдЮрд╛рдкрди рджреЗрдЦреЗрдВ' : 'Watch Ad'))) . ' (' . AD_REWARD . ' TON)', 'web_app' => array('url' => $webapp_url))
            ),
            array(
                array('text' => 'ЁЯФД ' . ($lang_code == 'tr' ? 'Bakiye Kontrol' : ($lang_code == 'ru' ? '╨Я╤А╨╛╨▓╨╡╤А╨╕╤В╤М ╨▒╨░╨╗╨░╨╜╤Б' : ($lang_code == 'hi' ? 'рдмреИрд▓реЗрдВрд╕ рдЪреЗрдХ' : 'Check Balance'))), 'callback_data' => 'balance')
            ),
            array(
                array('text' => 'тмЕя╕П ' . ($lang_code == 'tr' ? 'Ana Men├╝' : ($lang_code == 'ru' ? '╨У╨╗╨░╨▓╨╜╨╛╨╡ ╨╝╨╡╨╜╤О' : ($lang_code == 'hi' ? 'рдореБрдЦреНрдп рдореЗрдиреВ' : 'Main Menu'))), 'callback_data' => 'main_menu')
            )
        )
    );
}

function getBalanceKeyboard($lang_code = 'en') {
    return array(
        'inline_keyboard' => array(
            array(
                array('text' => 'ЁЯУ▒ ' . ($lang_code == 'tr' ? 'Reklam ─░zle' : ($lang_code == 'ru' ? '╨б╨╝╨╛╤В╤А╨╡╤В╤М ╤А╨╡╨║╨╗╨░╨╝╤Г' : ($lang_code == 'hi' ? 'рд╡рд┐рдЬреНрдЮрд╛рдкрди рджреЗрдЦреЗрдВ' : 'Watch Ad'))), 'callback_data' => 'earn')
            ),
            array(
                array('text' => 'ЁЯФД ' . ($lang_code == 'tr' ? 'Yenile' : ($lang_code == 'ru' ? '╨Ю╨▒╨╜╨╛╨▓╨╕╤В╤М' : ($lang_code == 'hi' ? 'рд░рд┐рдлреНрд░реЗрд╢' : 'Refresh'))), 'callback_data' => 'balance')
            ),
            array(
                array('text' => 'тмЕя╕П ' . ($lang_code == 'tr' ? 'Ana Men├╝' : ($lang_code == 'ru' ? '╨У╨╗╨░╨▓╨╜╨╛╨╡ ╨╝╨╡╨╜╤О' : ($lang_code == 'hi' ? 'рдореБрдЦреНрдп рдореЗрдиреВ' : 'Main Menu'))), 'callback_data' => 'main_menu')
            )
        )
    );
}

function getReferralsKeyboard($lang_code = 'en') {
    return array(
        'inline_keyboard' => array(
            array(
                array('text' => 'ЁЯУд ' . ($lang_code == 'tr' ? 'Referans Payla┼Я' : ($lang_code == 'ru' ? '╨Я╨╛╨┤╨╡╨╗╨╕╤В╤М╤Б╤П ╤Б╤Б╤Л╨╗╨║╨╛╨╣' : ($lang_code == 'hi' ? 'рд░реЗрдлрд░рд▓ рд╢реЗрдпрд░' : 'Share Referral'))), 'callback_data' => 'share_referral')
            ),
            array(
                array('text' => 'ЁЯФД ' . ($lang_code == 'tr' ? 'Yenile' : ($lang_code == 'ru' ? '╨Ю╨▒╨╜╨╛╨▓╨╕╤В╤М' : ($lang_code == 'hi' ? 'рд░рд┐рдлреНрд░реЗрд╢' : 'Refresh'))), 'callback_data' => 'referrals')
            ),
            array(
                array('text' => 'тмЕя╕П ' . ($lang_code == 'tr' ? 'Ana Men├╝' : ($lang_code == 'ru' ? '╨У╨╗╨░╨▓╨╜╨╛╨╡ ╨╝╨╡╨╜╤О' : ($lang_code == 'hi' ? 'рдореБрдЦреНрдп рдореЗрдиреВ' : 'Main Menu'))), 'callback_data' => 'main_menu')
            )
        )
    );
}

function getWithdrawKeyboard($has_address = false, $lang_code = 'en') {
    if ($has_address) {
        return array(
            'inline_keyboard' => array(
                array(
                    array('text' => 'ЁЯЪА ' . ($lang_code == 'tr' ? '├Зekim Yap' : ($lang_code == 'ru' ? '╨Т╤Л╨▓╨╡╤Б╤В╨╕' : ($lang_code == 'hi' ? 'рдирд┐рдХрд╛рд╕реА рдХрд░реЗрдВ' : 'Submit Withdrawal'))), 'callback_data' => 'submit_withdrawal')
                ),
                array(
                    array('text' => 'тЬПя╕П ' . ($lang_code == 'tr' ? 'Adres De─Яi┼Яtir' : ($lang_code == 'ru' ? '╨Ш╨╖╨╝╨╡╨╜╨╕╤В╤М ╨░╨┤╤А╨╡╤Б' : ($lang_code == 'hi' ? 'рдкрддрд╛ рдмрджрд▓реЗрдВ' : 'Change Address'))), 'callback_data' => 'enter_ton_address')
                ),
                array(
                    array('text' => 'тмЕя╕П ' . ($lang_code == 'tr' ? 'Ana Men├╝' : ($lang_code == 'ru' ? '╨У╨╗╨░╨▓╨╜╨╛╨╡ ╨╝╨╡╨╜╤О' : ($lang_code == 'hi' ? 'рдореБрдЦреНрдп рдореЗрдиреВ' : 'Main Menu'))), 'callback_data' => 'main_menu')
                )
            )
        );
    } else {
        return array(
            'inline_keyboard' => array(
                array(
                    array('text' => 'ЁЯТ│ ' . ($lang_code == 'tr' ? 'TON Adresi Gir' : ($lang_code == 'ru' ? '╨Т╨▓╨╡╤Б╤В╨╕ TON ╨░╨┤╤А╨╡╤Б' : ($lang_code == 'hi' ? 'TON рдкрддрд╛ рджрд░реНрдЬ рдХрд░реЗрдВ' : 'Enter TON Address'))), 'callback_data' => 'enter_ton_address')
                ),
                array(
                    array('text' => 'тмЕя╕П ' . ($lang_code == 'tr' ? 'Ana Men├╝' : ($lang_code == 'ru' ? '╨У╨╗╨░╨▓╨╜╨╛╨╡ ╨╝╨╡╨╜╤О' : ($lang_code == 'hi' ? 'рдореБрдЦреНрдп рдореЗрдиреВ' : 'Main Menu'))), 'callback_data' => 'main_menu')
                )
            )
        );
    }
}

function getSaveAddressKeyboard($lang_code = 'en') {
    return array(
        'inline_keyboard' => array(
            array(
                array('text' => 'ЁЯТ╛ ' . ($lang_code == 'tr' ? 'Adresi Kaydet' : ($lang_code == 'ru' ? '╨б╨╛╤Е╤А╨░╨╜╨╕╤В╤М ╨░╨┤╤А╨╡╤Б' : ($lang_code == 'hi' ? 'рдкрддрд╛ рд╕рд╣реЗрдЬреЗрдВ' : 'Save Address')), 'callback_data' => 'save_ton_address')
            ),
            array(
                array('text' => 'тЭМ ' . ($lang_code == 'tr' ? '─░ptal' : ($lang_code == 'ru' ? '╨Ю╤В╨╝╨╡╨╜╨░' : ($lang_code == 'hi' ? 'рд░рджреНрдж рдХрд░реЗрдВ' : 'Cancel'))), 'callback_data' => 'main_menu')
            )
        )
    );
}

function processUpdate($update) {
    global $lang;
    
    // G├╝nl├╝k limitleri s─▒f─▒rla
    resetDailyLimits();
    
    $users = loadUsers();
    
    if (isset($update['message'])) {
        $message = $update['message'];
        $chat_id = $message['chat']['id'];
        $text = $message['text'] ?? '';
        $username = $message['chat']['username'] ?? 'Unknown';
        
        logError("Message from " . $chat_id . ": " . $text);
        
        // Create user if not exists
        if (!isset($users[$chat_id])) {
            $ref_code = generateRefCode($chat_id);
            $users[$chat_id] = array(
                'balance' => 0,
                'referrals' => 0,
                'ref_code' => $ref_code,
                'last_ad_watch' => 0,
                'ads_watched_today' => 0,
                'last_daily_reset' => date('Y-m-d'),
                'ton_address' => '',
                'total_earned' => 0,
                'created_at' => time(),
                'referred_by' => null,
                'referral_list' => array(),
                'username' => $username,
                'max_balance' => 0,
                'language' => 'en',
                'channel_joined' => false
            );
            saveUsers($users);
            logError("New user created: " . $chat_id);
        }
        
        $user_lang = isset($users[$chat_id]['language']) ? $users[$chat_id]['language'] : 'en';
        
        // Kanal kontrol├╝ - e─Яer kanala kat─▒lmam─▒┼Яsa
        if (!$users[$chat_id]['channel_joined']) {
            if (strpos($text, '/start') === 0) {
                $channel_joined = isUserInChannel($chat_id);
                
                if ($channel_joined) {
                    $users[$chat_id]['channel_joined'] = true;
                    saveUsers($users);
                    
                    // Normal start i┼Яlemine devam et
                    processStartCommand($update, $users, $chat_id, $text, $username, $user_lang);
                } else {
                    sendMessage($chat_id, $lang[$user_lang]['channel_required'], getChannelJoinKeyboard($user_lang));
                }
            }
            return;
        }
        
        if (strpos($text, '/start') === 0) {
            processStartCommand($update, $users, $chat_id, $text, $username, $user_lang);
        } elseif (isset($users[$chat_id]['awaiting_ton_address'])) {
            $ton_address = trim($text);
            
            if (isValidTONAddress($ton_address)) {
                $users[$chat_id]['ton_address_temp'] = $ton_address;
                unset($users[$chat_id]['awaiting_ton_address']);
                saveUsers($users);
                
                $response = "ЁЯФЧ <b>" . ($user_lang == 'tr' ? 'TON Adresi Al─▒nd─▒' : ($user_lang == 'ru' ? 'TON ╨░╨┤╤А╨╡╤Б ╨┐╨╛╨╗╤Г╤З╨╡╨╜' : ($user_lang == 'hi' ? 'TON рдкрддрд╛ рдкреНрд░рд╛рдкреНрдд' : 'TON Address Received'))) . "</b>\n\n";
                $response .= "тЬЕ <b>" . ($user_lang == 'tr' ? 'Ge├зerli TON Adresi' : ($user_lang == 'ru' ? '╨Ф╨╡╨╣╤Б╤В╨▓╨╕╤В╨╡╨╗╤М╨╜╤Л╨╣ TON ╨░╨┤╤А╨╡╤Б' : ($user_lang == 'hi' ? 'рдорд╛рдиреНрдп TON рдкрддрд╛' : 'Valid TON Address'))) . "</b>\n\n";
                $response .= ($user_lang == 'tr' ? 'Adres:' : ($user_lang == 'ru' ? '╨Р╨┤╤А╨╡╤Б:' : ($user_lang == 'hi' ? 'рдкрддрд╛:' : 'Address:'))) . " <code>" . $ton_address . "</code>\n\n";
                $response .= ($user_lang == 'tr' ? 'Kaydetmek i├зin "Adresi Kaydet"e t─▒kla:' : ($user_lang == 'ru' ? '╨Э╨░╨╢╨╝╨╕╤В╨╡ "╨б╨╛╤Е╤А╨░╨╜╨╕╤В╤М ╨░╨┤╤А╨╡╤Б" ╨┤╨╗╤П ╨┐╨╛╨┤╤В╨▓╨╡╤А╨╢╨┤╨╡╨╜╨╕╤П:' : ($user_lang == 'hi' ? 'рдкреБрд╖реНрдЯрд┐ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП \'рдкрддрд╛ рд╕рд╣реЗрдЬреЗрдВ\' рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ:' : 'Click \'Save Address\' to confirm:')));
                
                sendMessage($chat_id, $response, getSaveAddressKeyboard($user_lang));
            } else {
                sendMessage($chat_id, $lang[$user_lang]['invalid_address']);
            }
        }
    } elseif (isset($update['callback_query'])) {
        $callback = $update['callback_query'];
        $chat_id = $callback['message']['chat']['id'];
        $message_id = $callback['message']['message_id'];
        $data = $callback['data'];
        
        logError("Callback from " . $chat_id . ": " . $data);
        
        $users = loadUsers();
        if (!isset($users[$chat_id])) {
            $ref_code = generateRefCode($chat_id);
            $users[$chat_id] = array(
                'balance' => 0,
                'referrals' => 0,
                'ref_code' => $ref_code,
                'last_ad_watch' => 0,
                'ads_watched_today' => 0,
                'last_daily_reset' => date('Y-m-d'),
                'ton_address' => ''
                'total_earned' => 0,
                'created_at' => time(),
                'referred_by' => null,
                'referral_list' => array(),
                'max_balance' => 0,
                'language' => 'en',
                'channel_joined' => false
            );
            saveUsers($users);
        }
        
        $user_lang = isset($users[$chat_id]['language']) ? $users[$chat_id]['language'] : 'en';
        $user = $users[$chat_id];
        
        // Kanal kontrol├╝ i├зin ├╢zel callback
        if ($data == 'check_join') {
            $channel_joined = isUserInChannel($chat_id);
            
            if ($channel_joined) {
                $users[$chat_id]['channel_joined'] = true;
                saveUsers($users);
                
                editMessageText($chat_id, $message_id, $lang[$user_lang]['joined_success'], getMainKeyboard($user_lang));
            } else {
                editMessageText($chat_id, $message_id, $lang[$user_lang]['not_joined'], getChannelJoinKeyboard($user_lang));
            }
            return;
        }
        
        // E─Яer kanala kat─▒lmam─▒┼Яsa ve ana men├╝ callback'i de─Яilse
        if (!$users[$chat_id]['channel_joined'] && $data != 'change_lang' && !str_starts_with($data, 'lang_')) {
            editMessageText($chat_id, $message_id, $lang[$user_lang]['channel_required'], getChannelJoinKeyboard($user_lang));
            return;
        }
        
        switch ($data) {
            case 'change_lang':
                $response = "ЁЯМР <b>Select Language / Dil Se├зin / ╨Т╤Л╨▒╨╡╤А╨╕╤В╨╡ ╤П╨╖╤Л╨║ / рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ</b>\n\n";
                $response .= "Please choose your preferred language:";
                editMessageText($chat_id, $message_id, $response, getLanguageKeyboard());
                break;
                
            case 'lang_en':
            case 'lang_tr':
            case 'lang_ru':
            case 'lang_hi':
                $selected_lang = substr($data, 5);
                $users[$chat_id]['language'] = $selected_lang;
                saveUsers($users);
                
                $response = "тЬЕ <b>" . ($selected_lang == 'tr' ? 'Dil T├╝rk├зe olarak ayarland─▒!' : ($selected_lang == 'ru' ? '╨п╨╖╤Л╨║ ╤Г╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜ ╨╜╨░ ╨а╤Г╤Б╤Б╨║╨╕╨╣!' : ($selected_lang == 'hi' ? 'рднрд╛рд╖рд╛ рд╣рд┐рдиреНрджреА рдкрд░ рд╕реЗрдЯ рдХреА рдЧрдИ!' : 'Language set to English!'))) . "</b>";
                editMessageText($chat_id, $message_id, $response, getMainKeyboard($selected_lang));
                break;
                
            case 'main_menu':
                $response = $lang[$user_lang]['welcome'] . $lang[$user_lang]['earn_info'] . 
                           sprintf($lang[$user_lang]['your_ref_code'], $user['ref_code']) . 
                           $lang[$user_lang]['rewards'] . $lang[$user_lang]['daily_limit'] . 
                           $lang[$user_lang]['withdraw_req'];
                editMessageText($chat_id, $message_id, $response, getMainKeyboard($user_lang));
                break;
                
            case 'earn':
                $ads_today = isset($user['ads_watched_today']) ? $user['ads_watched_today'] : 0;
                $ads_remaining = DAILY_AD_LIMIT - $ads_today;
                $max_balance = isset($user['max_balance']) ? $user['max_balance'] : $user['balance'];
                
                $response = $lang[$user_lang]['earn_title'] . $lang[$user_lang]['earn_instructions'] . 
                           sprintf($lang[$user_lang]['daily_progress'], $ads_today, DAILY_AD_LIMIT, $ads_remaining) . 
                           sprintf($lang[$user_lang]['balance_stats'], 
                                   number_format($user['balance'], 6), 
                                   number_format($max_balance, 6), 
                                   number_format($user['total_earned'], 6));
                editMessageText($chat_id, $message_id, $response, getEarnKeyboard($user_lang));
                break;
                
            case 'balance':
                $max_balance = isset($user['max_balance']) ? $user['max_balance'] : $user['balance'];
                $response = $lang[$user_lang]['balance_title'] . 
                           sprintf($lang[$user_lang]['balance_details'], 
                                   number_format($user['balance'], 6), 
                                   number_format($max_balance, 6), 
                                   number_format($user['total_earned'], 6), 
                                   $user['referrals']);
                editMessageText($chat_id, $message_id, $response, getBalanceKeyboard($user_lang));
                break;
                
            case 'referrals':
                $ref_earnings = $user['referrals'] * REF_REWARD;
                $response = $lang[$user_lang]['ref_title'] . 
                           sprintf($lang[$user_lang]['ref_stats'], 
                                   $user['referrals'], 
                                   number_format($ref_earnings, 6), 
                                   $user['ref_code']) . 
                           $lang[$user_lang]['ref_instructions'];
                editMessageText($chat_id, $message_id, $response, getReferralsKeyboard($user_lang));
                break;
                
            case 'withdraw':
                $has_address = !empty($user['ton_address']);
                $response = $lang[$user_lang]['withdraw_title'] . 
                           $lang[$user_lang]['withdraw_requirements'] . 
                           sprintf($lang[$user_lang]['withdraw_stats'], 
                                   $user['referrals'], MIN_WITHDRAW_REF,
                                   number_format($user['balance'], 6), MIN_WITHDRAW_AMOUNT);
                
                if ($has_address) {
                    $response .= sprintf($lang[$user_lang]['withdraw_address'], "<code>" . $user['ton_address'] . "</code>");
                } else {
                    $response .= $lang[$user_lang]['no_address'];
                }
                
                editMessageText($chat_id, $message_id, $response, getWithdrawKeyboard($has_address, $user_lang));
                break;
                
            case 'enter_ton_address':
                $users[$chat_id]['awaiting_ton_address'] = true;
                saveUsers($users);
                sendMessage($chat_id, $lang[$user_lang]['enter_address']);
                break;
                
            case 'save_ton_address':
                if (isset($user['ton_address_temp'])) {
                    $users[$chat_id]['ton_address'] = $user['ton_address_temp'];
                    unset($users[$chat_id]['ton_address_temp']);
                    saveUsers($users);
                    
                    editMessageText($chat_id, $message_id, $lang[$user_lang]['address_saved'], getWithdrawKeyboard(true, $user_lang));
                }
                break;
                
            case 'submit_withdrawal':
                if ($user['referrals'] < MIN_WITHDRAW_REF) {
                    $response = sprintf($lang[$user_lang]['insufficient_refs'], MIN_WITHDRAW_REF, $user['referrals']);
                    editMessageText($chat_id, $message_id, $response, getWithdrawKeyboard(!empty($user['ton_address']), $user_lang));
                    break;
                }
                
                if ($user['balance'] < MIN_WITHDRAW_AMOUNT) {
                    $response = sprintf($lang[$user_lang]['insufficient_balance'], MIN_WITHDRAW_AMOUNT, number_format($user['balance'], 6));
                    editMessageText($chat_id, $message_id, $response, getWithdrawKeyboard(!empty($user['ton_address']), $user_lang));
                    break;
                }
                
                if (empty($user['ton_address'])) {
                    editMessageText($chat_id, $message_id, $lang[$user_lang]['no_address'], getWithdrawKeyboard(false, $user_lang));
                    break;
                }
                
                // Simulate withdrawal
                $withdraw_amount = $user['balance'];
                $users[$chat_id]['balance'] = 0;
                saveUsers($users);
                
                $response = sprintf($lang[$user_lang]['withdraw_success'], number_format($withdraw_amount, 6));
                editMessageText($chat_id, $message_id, $response, getMainKeyboard($user_lang));
                break;
                
            case 'share_referral':
                $ref_link = "https://t.me/" . $callback['message']['chat']['username'] . "?start=" . $user['ref_code'];
                $share_text = $user_lang == 'tr' ? 
                    "ЁЯЪА TON kazanmak i├зin bu botu kullan!\n\n" . $ref_link :
                    "ЁЯЪА Use this bot to earn TON!\n\n" . $ref_link;
                
                $response = $user_lang == 'tr' ? 
                    "ЁЯУд <b>Referans Linkiniz:</b>\n\n" . $ref_link . "\n\nBu linki arkada┼Яlar─▒n─▒zla payla┼Я─▒n!" :
                    "ЁЯУд <b>Your Referral Link:</b>\n\n" . $ref_link . "\n\nShare this link with your friends!";
                
                editMessageText($chat_id, $message_id, $response, getReferralsKeyboard($user_lang));
                break;
        }
    }
}

function processStartCommand($update, &$users, $chat_id, $text, $username, $user_lang) {
    global $lang;
    
    $parts = explode(' ', $text);
    $ref_code_param = isset($parts[1]) ? $parts[1] : null;
    
    $user = $users[$chat_id];
    $welcome = $lang[$user_lang]['welcome'];
    
    // REFERANS KONTROL├Ь - D├ЬZELT─░LM─░┼Ю
    if ($ref_code_param && $ref_code_param !== $user['ref_code'] && !isset($user['referred_by'])) {
        logError("Referral code detected: " . $ref_code_param);
        
        $referrer_found = false;
        $referrer_id = null;
        $referrer_username = '';
        
        foreach ($users as $id => $u) {
            if (isset($u['ref_code']) && $u['ref_code'] === $ref_code_param && $id != $chat_id) {
                $referrer_found = true;
                $referrer_id = $id;
                $referrer_username = isset($u['username']) ? $u['username'] : 'User';
                logError("Referrer found: " . $referrer_id . " with username: " . $referrer_username);
                break;
            }
        }
        
        if ($referrer_found && $referrer_id) {
            logError("Processing referral for referrer: " . $referrer_id);
            
            // Yeni kullan─▒c─▒y─▒ g├╝ncelle
            $users[$chat_id]['referred_by'] = $referrer_id;
            $users[$chat_id]['username'] = $username;
            
            // Referans vereni g├╝ncelle - REFERANS SAYISI D├ЬZELT─░LD─░
            $current_referrals = isset($users[$referrer_id]['referrals']) ? $users[$referrer_id]['referrals'] : 0;
            $current_balance = isset($users[$referrer_id]['balance']) ? $users[$referrer_id]['balance'] : 0;
            $current_total_earned = isset($users[$referrer_id]['total_earned']) ? $users[$referrer_id]['total_earned'] : 0;
            $current_max_balance = isset($users[$referrer_id]['max_balance']) ? $users[$referrer_id]['max_balance'] : 0;
            
            // REFERANS SAYISINI +1 ARTIR ve BAK─░YE EKLE - D├ЬZELT─░LD─░
            $users[$referrer_id]['referrals'] = $current_referrals + 1; // тЬЕ BU SATIR D├ЬZELT─░LD─░
            $users[$referrer_id]['balance'] = $current_balance + REF_REWARD;
            $users[$referrer_id]['total_earned'] = $current_total_earned + REF_REWARD;
            
            // тЬЕ EN Y├ЬKSEK BAK─░YEY─░ G├ЬNCELLE
            $new_balance = $current_balance + REF_REWARD;
            if ($new_balance > $current_max_balance) {
                $users[$referrer_id]['max_balance'] = $new_balance;
            }
            
            // Referans listesine ekle
            if (!isset($users[$referrer_id]['referral_list'])) {
                $users[$referrer_id]['referral_list'] = array();
            }
            
            $users[$referrer_id]['referral_list'][] = array(
                'user_id' => $chat_id,
                'username' => $username,
                'joined_at' => time(),
                'earned_from' => REF_REWARD
            );
            
            if (saveUsers($users)) {
                logError("Referral saved successfully - Referrer: " . $referrer_id . " now has " . $users[$referrer_id]['referrals'] . " referrals");
                
                // Referans vereni bilgilendir
                $ref_message = sprintf($lang[$users[$referrer_id]['language']]['new_ref'], 
                                      $username, 
                                      $users[$referrer_id]['referrals'], 
                                      number_format($users[$referrer_id]['balance'], 6));
                
                if (sendMessage($referrer_id, $ref_message)) {
                    logError("Referral notification sent to: " . $referrer_id);
                } else {
                    logError("Failed to send referral notification to: " . $referrer_id);
                }
                
                $welcome = sprintf($lang[$user_lang]['welcome_ref'], $referrer_username);
            } else {
                logError("FAILED to save referral data");
            }
        } else {
            logError("Referrer NOT FOUND for code: " . $ref_code_param);
        }
    } else {
        if (isset($user['referred_by'])) {
            logError("User already referred by: " . $user['referred_by']);
        }
        if ($ref_code_param === $user['ref_code']) {
            logError("User used own ref code");
        }
    }
    
    $welcome .= $lang[$user_lang]['earn_info'] . 
               sprintf($lang[$user_lang]['your_ref_code'], $users[$chat_id]['ref_code']) . 
               $lang[$user_lang]['rewards'] . $lang[$user_lang]['daily_limit'] . 
               $lang[$user_lang]['withdraw_req'];
    
    sendMessage($chat_id, $welcome, getMainKeyboard($user_lang));
}

// Main webhook handler
$input = file_get_contents('php://input');
$update = json_decode($input, true);

if ($update) {
    processUpdate($update);
} else {
    http_response_code(400);
    die('Invalid update');
}
?> 
